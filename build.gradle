// For those who want the bleeding edge
buildscript {
  repositories {
    jcenter()
    maven {
      name = "forge"
      url = "https://files.minecraftforge.net/maven"
    }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

group = "exterminatorjeff.undergroundbiomes" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
// version = "${config.minecraft_version}-${config.mod_version}.${System.getenv("BUILD_NUMBER") ?: 'SNAPSHOT'}"
version = "${config.mod_version}"
archivesBaseName = "UndergroundBiomesConstructs-1.12"

def env = System.getenv()
if (env.BUILD_NUMBER) {
    version = version + "-" + "${env.BUILD_NUMBER}"
}

// Enforce Java version explicitly so eclipse task generates correctly.
sourceCompatibility = compileJava.sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
  version = config.minecraft_version + "-" + config.forge_version
  runDir = "run"

  // the mappings can be changed at any time, and must be in the following format.
  // snapshot_YYYYMMDD   snapshot are built nightly.
  // stable_#            stables are built at the discretion of the MCP team.
  // Use non-default mappings at your own risk. they may not allways work.
  // simply re-run your setup task after changing the mappings to update your workspace.
  mappings = "${config.mappings_version}"
  // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
  
  // replacing
  replace "@version@", project.version
  replaceIn "ModInfo.java"
}

repositories {
  mavenCentral()
  maven {
    url = "https://maven.blamejared.com"
  }
//  mavenLocal()
}

dependencies {
  // you may put jars on which you depend on in ./libs
  // or you may define them like so..
  //compile "some.group:artifact:version:classifier"
  //compile "some.group:artifact:version"

  // real examples
  //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
  //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

  // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
  // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
  // except that these dependencies get remapped to your current MCP mappings
  //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
  //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

  // for more info...
  // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
  // http://www.gradle.org/docs/current/userguide/dependency_management.html

  provided files('libs/toolprogression.jar')
  provided "vazkii.quark:Quark:${config.Quark_version}"
  provided "vazkii.autoreglib:AutoRegLib:${config.AutoRegLib_version}"
  provided files('libs/dynamictrees.jar')
}

processResources {
  // this will ensure that this task is redone when the versions change.
  inputs.property "version", project.version
  inputs.property "mcversion", config.minecraft_version

  // replace stuff in mcmod.info, nothing else
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'

    // replace version and mcversion
    expand 'version': project.version, 'mcversion': config.minecraft_version
  }

  // copy everything else, thats not the mcmod.info
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

apply from: 'asset_templates.gradle'

jar {
    classifier = ''
    destinationDir = file 'output'
}

uploadArchives {
    repositories {
       mavenDeployer {
             repository(url: "https://maven.altillimity.com/content/repositories/releases") {
             authentication(userName: mavenUser, password: mavenPassword)
	}
             pom.version = "$version-1.12.2"
             pom.artifactId = "undergroundbiomes"
             pom.groupId = "exterminatorjeff.undergroundbiomes"
       }
    }
}
